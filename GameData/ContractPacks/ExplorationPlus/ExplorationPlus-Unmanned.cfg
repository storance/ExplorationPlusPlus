CONTRACT_TYPE
{
	name = ExplorationPlus-UnmannedOrbitHomeworld
	title = Unmanned Orbit Around @/homeworld
	group = ExplorationPlus
	description = Sending a probe into space has given our scientists valuable scientific data about the upper atmospher and space around @/homeworld.  Our next goal is to put the first artificial satellite into orbit around @/homeworld!
	synopsis = Launch an unmanned probe into orbit around @/homeworld
	completedMessage = Huzzah! There is no such thing as the final frontier.
	minExpiry = 1
	maxExpiry = 7
	deadline = 0
	cancellable = true
	declinable = true
	prestige = Significant
	targetBody = @/homeworld
	rewardScience = 3
	rewardReputation = 6
	rewardFunds = 40000.0
	failureReputation = 0.0
	failureFunds = 8000.0
	advanceFunds = 8000.0

	DATA
	{
		type = CelestialBody
		uniquenessCheck = CONTRACT_ACTIVE
		homeworld = HomeWorld()
		hidden = true
	}

	DATA
	{
		type = string
		requiredValue = true
		VesselVariableName = "UnmannedOrbiter" + @/v.Name()
		hidden = true
	}

	PARAMETER
	{
		name = UnmannedOrbiterVessel
		type = VesselParameterGroup
		define = @/VesselVariableName
		hideVesselName = true   
		dissassociateVesselsOnContractCompletion = true
		disableOnStateChange = true

		PARAMETER 
		{
			name = NewVessel
			type = NewVessel
			hidden = true
		}

		PARAMETER
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			disableOnStateChange = false
			title = Must be an unmanned probe
		}

		PARAMETER
		{
			name = ReachState
			type = ReachState
			situation = ORBITING
			disableOnStateChange = true
			title = Orbit @/homeworld
		}
	}
	
	REQUIREMENT
	{
		name = ReachOrbit
		type = Orbit
		targetBody = @/homeworld
		invertRequirement = true
		title = Must not have orbitted @/homeworld
	}
}

CONTRACT_TYPE
{
	name = ExplorationPlus-LaunchDockingTarget
	title = Launch a Docking Target Vessel
	group = ExplorationPlus
	description = To aid our efforts of building more complicated missions, we need to develop the necessary skills to perform an orbital rendezvous and docking.  To accomplish that, we must first launch an unmanned target vessel into orbit around @/homeworld.  Make sure it has a docking port!
	synopsis = Launch a docking target vessel for future missions.
	completedMessage = Huzzah! There is no such thing as the final frontier.
	minExpiry = 1
	maxExpiry = 7
	deadline = 0
	cancellable = true
	declinable = true
	prestige = Significant
	targetBody = @/homeworld
	maxCompletions = 1
	rewardScience = 0.0
	rewardReputation = 2.0
	rewardFunds = 22000.0
	failureReputation = 0.0
	failureFunds = 0.0
	advanceFunds = 0.0

	DATA
	{
		type = CelestialBody
		homeworld = HomeWorld()
	}

	PARAMETER
	{
		name = AgenaTargetVehicle
		type = VesselParameterGroup
		define = AgenaTargetVehicle

		PARAMETER 
		{
			name = NewVessel
			type = NewVessel
			hidden = true
		}

		PARAMETER
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			disableOnStateChange = false
			title = Must be an unmanned probe
		}

		PARAMETER
		{
			name = PartValidation
			type = PartValidation
			partModule = ModuleDockingNode
			title = Must have a docking port
		}
		
		PARAMETER
		{
			name = ReachState
			type = ReachState
			situation = ORBITING
			disableOnStateChange = true
			title = Orbit @/homeworld
		}
	}

	REQUIREMENT
	{
		name = PartModuleUnlocked
		type = PartModuleUnlocked
		partModule = ModuleDockingNode
		title = Must have unlocked docking ports.
	}
	
	REQUIREMENT
	{
		name = Rendezvous
		type = Rendezvous
		invertRequirement = true
		title = Must not have performed an orbital rendezvous
	}
	
	REQUIREMENT
	{
		name = ReachOrbit
		type = Orbit
		targetBody = @/homeworld
		title =  Must have reached orbit for the first time.
	}
}

CONTRACT_TYPE
{
	name = ExplorationPlus-FlyBy
	title = Fly-By @/targetBody1
	genericTitle = Fly-By a Celestial Body
	group = ExplorationPlus
	description = Here at KSC we like to think we are always open to exploring new frontiers. With this in mind, we want you to send an unmanned probe on a fly-by of @/targetBody1 and collect some science.
	genericDescription = Here at KSC we like to think we are always open to exploring new frontiers. With this in mind, we want you to send an unmanned probe on a fly-by of a Celestial Body and collect some science.
	synopsis = Fly-by @/targetBody1
	completedMessage = Huzzah! There is no such thing as the final frontier.
	minExpiry = 1
	maxExpiry = 7
	deadline = 0
	cancellable = true
	declinable = true
	prestige = Exceptional
	targetBody = @/targetBody1
	maxSimultaneous = @/maxSim
	rewardScience = 3
	rewardReputation = 6.0
	rewardFunds = 34000.00
	failureReputation = 0.0
	failureFunds = 10000 
	advanceFunds = 10000

	DATA
	{
		type = int
		maxSim = 3
		hidden = true
	}

	DATA
	{
		type = CelestialBody
		targetBody1 = NextUnreachedBodies(@/maxSim).SelectUnique()
		title = Must have not reached all bodies.
		uniquenessCheck = CONTRACT_ACTIVE
	}

	DATA
	{
		type = string
		requiredValue = true
		VesselVariableName = "UnmannedFlyBy" + @/targetBody1.Name()
		hidden = true
	}

	PARAMETER
	{
		name = UnmannedFlybyVessel
		type = VesselParameterGroup
		define = @/VesselVariableName
		hideVesselName = true   
		dissassociateVesselsOnContractCompletion = true
		disableOnStateChange = true

		PARAMETER 
		{
			name = NewVessel
			type = NewVessel
			hidden = true
		}

		PARAMETER
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			disableOnStateChange = false
			title = Must be an unmanned probe
		}

		PARAMETER
		{
			name = ReachState
			type = ReachState
			situation = ESCAPING
			title = Fly by @/targetBody1
			disableOnStateChange = true

			REQUIREMENT
			{
				name = NotSun
				type = Expression
				expression = !@/targetBody1.IsSun()
			}
		}

		PARAMETER
		{
			name = ReachState
			type = ReachState
			situation = ORBITING
			title = Orbit @/targetBody1
			disableOnStateChange = true

			REQUIREMENT
			{
				name = IsSun
				type = Expression
				expression = @/targetBody1.IsSun()
			}
		}

		PARAMETER
		{
			name = CollectScience
			type = CollectScience
			situation = InSpaceLow
			situation = InSpaceHigh
			recoveryMethod = RecoverOrTransmit
			title = Return science from space around @/targetBody1
		}
	}
	
	REQUIREMENT
	{
		name = ReachOrbit
		type = Orbit
		targetBody = HomeWorld()
		title = Must have reached orbit for the first time.
	}
}


CONTRACT_TYPE
{
	name = ExplorationPlus-UnmannedOrbitOther
	title = Unmanned Orbit Around @/targetBody1
	genericTitle = Unmanned Orbit Around a Celestial Body
	group = ExplorationPlus
	description = We collected a great deal of science from our fly-by of @/targetBody1. However, our scientists believe there is still more science to gather by putting an unmanned probe into orbit around to @/targetBody1.
	genericDescription = We collected a great deal of science from our fly-by of a Celestial Body. However, our scientists believe there is still more science to gather by putting an unmanned probe into orbit around to a Celestial Body.
	synopsis = Reach orbit around @/targetBody1 with an unmanned probe and collect science
	completedMessage = Huzzah! There is no such thing as the final frontier.
	minExpiry = 1
	maxExpiry = 7
	deadline = 0
	cancellable = true
	declinable = true
	prestige = Exceptional
	targetBody = @/targetBody1
	rewardScience = 3
	rewardReputation = 6
	rewardFunds = 34000.0
	failureReputation = 0.0
	failureFunds = 10000
	advanceFunds = 10000

	DATA
	{
		type = CelestialBody
		uniquenessCheck = CONTRACT_ACTIVE
		targetBody1 =  ReachedBodies().Where(b => !b.HaveOrbited() && !b.IsHomeWorld() && !b.IsSun()).SelectUnique()
		title = Must have reached a body but not orbited it.
	}

	DATA
	{
		type = string
		requiredValue = true
		VesselVariableName = "UnmannedOrbiter" + @/targetBody1.Name()
		hidden = true
	}

	PARAMETER
	{
		name = UnmannedOrbiterVessel
		type = VesselParameterGroup
		define = @/VesselVariableName
		hideVesselName = true   
		dissassociateVesselsOnContractCompletion = true
		disableOnStateChange = true

		PARAMETER
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			disableOnStateChange = false
			title = Must be an unmanned probe
		}

		PARAMETER
		{
			name = ReachState
			type = ReachState
			situation = ORBITING
			disableOnStateChange = true
			title = Orbit @/targetBody1
		}

		PARAMETER
		{
			name = CollectScience
			type = CollectScience
			situation = InSpaceLow
			situation = InSpaceHigh
			recoveryMethod = RecoverOrTransmit
			title = Return science from space around @/targetBody1
		}
	}
	
	REQUIREMENT
	{
		name = ReachOrbit
		type = Orbit
		targetBody = @/targetBody1
		invertRequirement = true
		title = Must not have orbited @/targetBody1
	}
}

CONTRACT_TYPE
{
	name = ExplorationPlus-UnmannedLanding
	title = Unmanned Landing on @/targetBody1
	genericTitle = Unmanned Landing on a Celestial Body
	group = ExplorationPlus
	description = Entering into orbit around @/targetBody1 was a huge accomplishment but there is still more science to be done! Our scientists now want you to land an unmanned probe on @/targetBody1 and collect some science.
	genericDescription = Entering into orbit around a Celestial Body was a huge accomplishment but there is still more science to be done! Our scientists now want you to land an unmanned probe on a Celestial Body and collect some science.
	synopsis = Land an unmanned probe on @/targetBody1 and collect science.
	completedMessage = Huzzah! There is no such thing as the final frontier.
	minExpiry = 1
	maxExpiry = 7
	deadline = 0
	cancellable = true
	declinable = true
	prestige = Exceptional
	targetBody = @/targetBody1
	rewardScience = 3.0
	rewardReputation = 6.0
	rewardFunds = 38000.00
	failureReputation = 0.0
	failureFunds = 14000.0
	advanceFunds = 14000.0
	DATA
	{
		type = CelestialBody
		uniquenessCheck = CONTRACT_ACTIVE
		targetBody1 = OrbitedBodies().Where(b => !b.HaveLandedOn() && b.HasSurface() && !b.IsHomeWorld()).SelectUnique()
		title = Must have orbited a celestial body, but not landed on it.
	}

	DATA
	{
		type = string
		requiredValue = true
		VesselVariableName = "UnmannedLander" + @/targetBody1.Name()
		hidden = true
	}

	PARAMETER
	{
		name = UnmannedLanderVessel
		type = VesselParameterGroup
		define = @/VesselVariableName
		hideVesselName = true   
		dissassociateVesselsOnContractCompletion = true
		disableOnStateChange = true

		PARAMETER
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			disableOnStateChange = false
			title = Must be an unmanned probe
		}

		PARAMETER
		{
			name = ReachState
			type = ReachState
			situation = LANDED
			situation = SPLASHED
			disableOnStateChange = true
			title = Land on @/targetBody1
		}

		PARAMETER
		{
			name = CollectScience
			type = CollectScience
			situation = SrfLanded
			situation = SrfSplashed
			recoveryMethod = RecoverOrTransmit
			title = Return science while landed on @/targetBody1
		}
	}
	
	REQUIREMENT
	{
		name = Landed
		type = Landing
		targetBody = @/targetBody1
		invertRequirement = true
		title = Must not have landed on @/targetBody1.
	}
	
	REQUIREMENT
	{
		name = SplashDown
		type = SplashDown
		targetBody = @/targetBody1
		invertRequirement = true
		title = Must not have splashed down on @/targetBody1.
	}
}